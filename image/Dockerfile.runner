FROM artifactory.cloud.ingka-system.cn/ccoecn-docker-virtual/golang:1.24.0 As builder

WORKDIR /go/src/app

ARG GO_ARCH
ARG GIT_ACCESS_TOKEN_USR
ARG GIT_ACCESS_TOKEN_PWD
ENV GO_ARCH $GO_ARCH
ENV GIT_ACCESS_TOKEN_USR $GIT_ACCESS_TOKEN_USR
ENV GIT_ACCESS_TOKEN_PWD $GIT_ACCESS_TOKEN_PWD
COPY src ./src
RUN echo "machine github.com login ${GIT_ACCESS_TOKEN_USR} password ${GIT_ACCESS_TOKEN_PWD}">> ~/.netrc; chmod 600 ~/.netrc
RUN cd ./src; go env -w GOPRIVATE=github.com/ingka-group-digital/*; go mod download; \
    GOOS=linux CGO_ENABLED=0 GOARCH=amd64 go build -o /go/src/app/bin/runner ./runner/

# 18.04 --> 24.04 due to latest (3/6/2025) rclone dependency
FROM artifactory.cloud.ingka-system.cn/ccoecn-docker-virtual/ubuntu:24.04  

ARG DOCKER_USER
ARG SHR_C_T
ARG RUNNER_TOKEN
ARG MNS_URL
ARG ACCESS_KEY
ARG SECRET_KEY
ARG REGION  
ARG RUNNER_PLATFORM 
ARG IMAGE_RETRIEVE_USERNAME
ARG IMAGE_RETRIEVE_PWD 
ARG IMAGE_RETRIEVE_SERVER
ARG SLS_ENC_KEY
ARG CTX_USERNAME
ARG CTX_PWD
ARG SLS_TF_CTL
# docker paras
ARG CHANNEL=stable
ARG DOCKER_VERSION=24.0.7
ARG DOCKER_COMPOSE_VERSION=v2.23.0
ARG DUMB_INIT_VERSION=1.2.5
ARG RUNNER_USER_UID=1001
ARG DOCKER_GROUP_GID=121
ARG ei=14
ENV DEBIAN_FRONTEND=noninteractive

ENV RUNNER_PLATFORM=$RUNNER_PLATFORM
ENV TF_VAR_RUNNER_TOKEN=$RUNNER_TOKEN 
ENV TF_VAR_MNS_URL=$MNS_URL
ENV ALICLOUD_ACCESS_KEY=$ACCESS_KEY
ENV ALICLOUD_SECRET_KEY=$SECRET_KEY
ENV ALICLOUD_REGION=$REGION 
ENV TF_VAR_IMAGE_RETRIEVE_USERNAME=$IMAGE_RETRIEVE_USERNAME
ENV TF_VAR_IMAGE_RETRIEVE_PWD=$IMAGE_RETRIEVE_PWD
ENV TF_VAR_IMAGE_RETRIEVE_SERVER=$IMAGE_RETRIEVE_SERVER
ENV RUNNER_ALLOW_RUNASROOT="1"
ENV SLS_ENC_KEY=$SLS_ENC_KEY
ENV contextusername=$CTX_USERNAME
ENV contextpassword=$CTX_PWD

RUN apt-get update -y \
    && apt-get install -y software-properties-common \
    && add-apt-repository -y ppa:git-core/ppa \
    && apt-get update -y \
    && apt-get install -y --no-install-recommends \
        curl \
        ca-certificates \
        git \
        iproute2 \
        iptables \
        jq \
        sudo \
        uidmap \ 
        libc6 \
        wget \
        pbzip2 \
        fuse-overlayfs \
        openssh-client \
        sshfs \
        zip \
        vim \
        unzip && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean
RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && \
    apt-get install -y --no-install-recommends git-lfs

RUN adduser --disabled-password --gecos "" --uid $RUNNER_USER_UID runner \
    && groupadd docker --gid $DOCKER_GROUP_GID \
    && usermod -aG sudo runner \
    && usermod -aG docker runner \
    && echo "%sudo   ALL=(ALL:ALL) NOPASSWD:ALL" > /etc/sudoers \
    && echo "Defaults env_keep += \"DEBIAN_FRONTEND\"" >> /etc/sudoers \
    && echo "root	ALL=(ALL:ALL) ALL" >> /etc/sudoers
ENV RUNNER_TOOL_CACHE=/opt/hostedtoolcache
RUN mkdir /opt/hostedtoolcache \
    && chgrp docker /opt/hostedtoolcache \
    && chmod g+rwx /opt/hostedtoolcache

## ref: https://docs.docker.com/engine/install/ubuntu/
RUN apt-get update -y \
    && install -m 0755 -d /etc/apt/keyrings \
    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc \
    && chmod a+r /etc/apt/keyrings/docker.asc \
    && echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
        tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && apt-get update -y \
    && apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin


WORKDIR /go/bin

COPY --from=builder /go/src/app/bin/runner ./runner
COPY src/_depsh ./_depsh
RUN if [ "$SLS_TF_CTL" = "go" ] ; then rm -rf ./_depsh; fi
COPY ./src/certs/ca.cert.pem ./certs/

RUN GH_RUNNER_VERSION=${GH_RUNNER_VERSION:-$(curl --silent "https://api.github.com/repos/actions/runner/releases/latest" | grep tag_name | sed -E 's/.*"v([^"]+)".*/\1/')}; \
    if [ -z $GH_RUNNER_VERSION ] ; then GH_RUNNER_VERSION=2.321.0; fi; \
    curl -m 900 -L -O https://github.com/actions/runner/releases/download/v${GH_RUNNER_VERSION}/actions-runner-${RUNNER_PLATFORM}-${GH_RUNNER_VERSION}.tar.gz \
    && tar -zxf actions-runner-${RUNNER_PLATFORM}-${GH_RUNNER_VERSION}.tar.gz > extract_runner.log \
    && rm -f actions-runner-${RUNNER_PLATFORM}-${GH_RUNNER_VERSION}.tar.gz \
    && ./bin/installdependencies.sh \ 
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean; chmod +x ./_depsh/init.sh; chmod +x ./_depsh/sacrify.sh; echo 200 > /tmp/healthy; \
    mkdir -p ~/.ssh

USER $DOCKER_USER