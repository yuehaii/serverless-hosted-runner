name: Test Tenant Registration CD
on:
  schedule:
    - cron: '* 1 * * 1,2,3,4,5'
    - cron: '* 11 * * 1,2,3,4,5'
    - cron: '10 * * * *' # test
    - cron: '25 * * * *' # test
  push:
    branches: [ master ]
    paths:
      - Registration.mk
      - registration/Registration_test.mk
      - dispatcher/*
      - module/*
      - Makefile
  pull_request:
    branches: [ master ]
    paths:
      - Registration.mk
      - registration/Registration_test.mk
      - dispatcher/*
      - module/*
      - Makefile
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: 'image version'
        required: false 
      registry:
        description: 'registration'
        default: 'Lazy'
        type: choice
        options:
        - Lazy
        - Allen
        - Mix
        required: false 
      provider:
        description: 'cloud provider'
        default: 'ali'
        type: choice
        options:
        - ali
        - azure 
        - gcp 
        required: false 
      dis_cpu:
        description: 'dispacher cpu core'
        default: '1'
        type: string
        required: false 
      dis_memory:
        description: 'dispacher memory gb'
        default: '2'
        type: string
        required: false 
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
run-name: ${{ github.workflow }} - ${{ inputs.version }} - ${{ inputs.registry }} - ${{ inputs.provider }} - dispacher:${{ inputs.dis_cpu }}core/${{ inputs.dis_memory }}gb
env:
  WF_SLS_DISPACHER_CPU_SIZE: ${{ inputs.dis_cpu }}.0
  WF_SLS_DISPACHER_MEM_SIZE: ${{ inputs.dis_memory }}.0
  # ali pr
  ALICLOUD_REGION: ${{ vars.ALICLOUD_REGION }}
  TF_VAR_IMAGE_RETRIEVE_USERNAME: ${{ secrets.TF_VAR_IMAGE_RETRIEVE_USERNAME }}
  TF_VAR_IMAGE_RETRIEVE_PWD: ${{ secrets.TF_VAR_IMAGE_RETRIEVE_PWD }}
  TF_VAR_IMAGE_RETRIEVE_SERVER: ${{ vars.TF_VAR_IMAGE_RETRIEVE_SERVER }}
  SLS_ENC_KEY: ${{ secrets.SLS_ENC_KEY }}
  SLS_GITENT_TK: ${{ secrets.SLS_GITENT_TK }}
  SLS_GITHUB_TK: ${{ secrets.SLS_GITHUB_TK }}
  BUILD_IMAGE_VER: ${{ inputs.version }}
  CTX_LOG_LEVEL: ${{ vars.CTX_LOG_LEVEL_TEST }}
  SLS_CLOUD_PR: ${{ inputs.provider }}
  SLS_TF_CTL: ${{ vars.SLS_TF_CTL_TEST }}
  WF_SLS_DISPACHER_CPU_SIZE_ALI: ${{ inputs.dis_cpu }}.0
  WF_SLS_DISPACHER_MEM_SIZE_ALI: ${{ inputs.dis_memory }}.0

  # different tenant
  DISPATCHER_VSWITCH_ID: ${{ vars.TEST_DISPATCHER_VSWITCH_ID }}
  DISPATCHER_SG_ID: ${{ vars.TEST_DISPATCHER_SG_ID }}
  ALICLOUD_ACCESS_KEY: ${{ secrets.TEST_ALICLOUD_ACCESS_KEY }}
  ALICLOUD_ACCESS_KEY_ID: ${{ secrets.TEST_ALICLOUD_ACCESS_KEY }}
  ALICLOUD_SECRET_KEY: ${{ secrets.TEST_ALICLOUD_SECRET_KEY }}
  ALICLOUD_ACCESS_KEY_SECRET: ${{ secrets.TEST_ALICLOUD_SECRET_KEY }}

  # az pr for dispacher
  ARM_CLIENT_ID: ${{ secrets.TEST_AZ_ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.TEST_AZ_ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ vars.TEST_AZ_ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.TEST_AZ_ARM_TENANT_ID }}
  ARM_ACI_LOCATION: ${{ vars.TEST_ARM_ACI_LOCATION }}
  ARM_ACI_SKU: ${{ vars.TEST_ARM_ACI_SKU }}
  ARM_ACI_NETWORK_TYPE: ${{ vars.TEST_ARM_ACI_NETWORK_TYPE }}
  AZ_LOG_ANA_WORKSPACE_ID: ${{ secrets.TEST_ARM_LOG_ANA_WS_ID }}
  AZ_LOG_ANA_WORKSPACE_KEY: ${{ secrets.TEST_ARM_LOG_ANA_WS_KEY }}
  AZ_RG_NAME: ${{ vars.TEST_AZ_RG_NAME }}
  AZ_SUBNET_IDS: ${{ vars.TEST_AZ_SUBNET_IDS }}
  ARM_ENVIRONMENT: ${{ vars.TEST_ARM_ENVIRONMENT }}
  ARM_RESOURCE_PROVIDER_REGISTRATIONS: none
  WF_SLS_DISPACHER_CPU_SIZE_AZURE: ${{ inputs.dis_cpu }}.0
  WF_SLS_DISPACHER_MEM_SIZE_AZURE: ${{ inputs.dis_memory }}.0
  # if using old pr version, please use below configuration to replace ARM_RESOURCE_PROVIDER_REGISTRATIONS
  # ARM_SKIP_PROVIDER_REGISTRATION: true

  # az pr for runner
  ARM_CLIENT_ID_DEST: ${{ secrets.TEST_AZ_ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET_DEST: ${{ secrets.TEST_AZ_ARM_CLIENT_SECRET }}
  ARM_TENANT_ID_DEST: ${{ vars.TEST_AZ_ARM_TENANT_ID }}
  ARM_LOG_ANA_WS_ID_DEST: ${{ secrets.TEST_ARM_LOG_ANA_WS_ID }}
  ARM_LOG_ANA_WS_KEY_DEST: ${{ secrets.TEST_ARM_LOG_ANA_WS_KEY }}

  # gcp pr
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
  GOOGLE_CREDENTIALS_BASE64: ${{ secrets.GOOGLE_CREDENTIALS_BASE64 }}
  GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}
  GOOGLE_REGION: ${{ vars.GOOGLE_REGION }}
  WF_SLS_DISPACHER_CPU_SIZE_GCP: ${{ inputs.dis_cpu }}.0
  WF_SLS_DISPACHER_MEM_SIZE_GCP: ${{ inputs.dis_memory }}.Gi

jobs:
  deploy:
    runs-on: serverless-hosted-runner
    steps:  
    - name: Checkout Repo
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #4.17
    - uses: ./ 
      name: "Install Dependency"  
      with:
        op: "install_dependency"
    - uses: ./ 
      name: "Lazy Install"  
      if: inputs.registry == 'Lazy'
      with:
        op: "lazy_install"  
        reg: "test"  
    - uses: ./ 
      name: "Allen Install"  
      if: inputs.registry == 'Allen'
      with:
        op: "allen_install"  
        reg: "allen"
    - uses: ./ 
      name: "Mix Install"  
      if: inputs.registry == 'Mix'
      with:
        op: "mix_install"  
        reg: "test"
    - uses: ./ 
      name: "Schedule Scale Up on Working hours"  
      if: github.event.schedule == '* 1 * * 1,2,3,4,5'
      env:
        BUILD_IMAGE_VER: ${{ vars.SCHEDULE_BUILD_IMAGE_VER_TEST }}
        WF_SLS_DISPACHER_CPU_SIZE_ALI: ${{ vars.SCHEDULE_DISPACHER_CPU_SIZE_ALI_TEST }}
        WF_SLS_DISPACHER_MEM_SIZE_ALI: ${{ vars.SCHEDULE_DISPACHER_MEM_SIZE_ALI_TEST }}
      with:
        op: "lazy_install"  
        reg: "test"
    - uses: ./ 
      name: "Schedule Scale Down on None-working hours"  
      if: github.event.schedule == '* 11 * * 1,2,3,4,5'
      env:
        BUILD_IMAGE_VER: ${{ vars.SCHEDULE_BUILD_IMAGE_VER_TEST }}
        WF_SLS_DISPACHER_CPU_SIZE_ALI: "1.0"
        WF_SLS_DISPACHER_MEM_SIZE_ALI: "2.0"
      with:
        op: "lazy_install"  
        reg: "test"
    - uses: ./ 
      name: "Schedule Scale Up on Working hours"  
      if: github.event.schedule == '10 * * * *'
      env:
        BUILD_IMAGE_VER: ${{ vars.SCHEDULE_BUILD_IMAGE_VER_TEST }}
        WF_SLS_DISPACHER_CPU_SIZE_ALI: ${{ vars.SCHEDULE_DISPACHER_CPU_SIZE_ALI_TEST }}
        WF_SLS_DISPACHER_MEM_SIZE_ALI: ${{ vars.SCHEDULE_DISPACHER_MEM_SIZE_ALI_TEST }}
      with:
        op: "lazy_install"  
        reg: "test"
    - uses: ./ 
      name: "Schedule Scale Up on Working hours"  
      if: github.event.schedule == '25 * * * *'
      env:
        BUILD_IMAGE_VER: ${{ vars.SCHEDULE_BUILD_IMAGE_VER_TEST }}
        WF_SLS_DISPACHER_CPU_SIZE_ALI: "1.0"
        WF_SLS_DISPACHER_MEM_SIZE_ALI: "2.0"
      with:
        op: "lazy_install"  
        reg: "test"