name: Test Tenant Registration CD
on:
  push:
    branches: [ master ]
    paths:
      - Registration.mk
      - registration/Registration_test.mk
      - dispatcher/*
      - module/*
      - Makefile
  pull_request:
    branches: [ master ]
    paths:
      - Registration.mk
      - registration/Registration_test.mk
      - dispatcher/*
      - module/*
      - Makefile
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: 'image version'
        required: false 
      registry:
        description: 'image registry'
        default: 'Lazy'
        type: choice
        options:
        - Lazy
        - Allen
        - Mix
        required: false 
      provider:
        description: 'cloud provider'
        default: 'ali'
        type: choice
        options:
        - ali
        - azure 
        - gcp 
        required: false 
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  # ali pr
  ALICLOUD_REGION: ${{ vars.ALICLOUD_REGION }}
  TF_VAR_IMAGE_RETRIEVE_USERNAME: ${{ secrets.TF_VAR_IMAGE_RETRIEVE_USERNAME }}
  TF_VAR_IMAGE_RETRIEVE_PWD: ${{ secrets.TF_VAR_IMAGE_RETRIEVE_PWD }}
  TF_VAR_IMAGE_RETRIEVE_SERVER: ${{ vars.TF_VAR_IMAGE_RETRIEVE_SERVER }}
  SLS_ENC_KEY: ${{ secrets.SLS_ENC_KEY }}
  SLS_GITENT_TK: ${{ secrets.SLS_GITENT_TK }}
  SLS_GITHUB_TK: ${{ secrets.SLS_GITHUB_TK }}
  BUILD_IMAGE_VER: ${{ inputs.version }}
  CTX_LOG_LEVEL: ${{ vars.CTX_LOG_LEVEL_TEST }}
  SLS_CLOUD_PR: ${{ inputs.provider }}
  # different tenant
  DISPATCHER_VSWITCH_ID: ${{ vars.TEST_DISPATCHER_VSWITCH_ID }}
  DISPATCHER_SG_ID: ${{ vars.TEST_DISPATCHER_SG_ID }}
  ALICLOUD_ACCESS_KEY: ${{ secrets.TEST_ALICLOUD_ACCESS_KEY }}
  ALICLOUD_ACCESS_KEY_ID: ${{ secrets.TEST_ALICLOUD_ACCESS_KEY }}
  ALICLOUD_SECRET_KEY: ${{ secrets.TEST_ALICLOUD_SECRET_KEY }}
  ALICLOUD_ACCESS_KEY_SECRET: ${{ secrets.TEST_ALICLOUD_SECRET_KEY }}

  # az pr for dispacher
  ARM_CLIENT_ID: ${{ secrets.TEST_AZ_ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.TEST_AZ_ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ vars.TEST_AZ_ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.TEST_AZ_ARM_TENANT_ID }}
  AZ_LOG_ANA_WORKSPACE_ID: ${{ secrets.TEST_ARM_LOG_ANA_WS_ID }}
  AZ_LOG_ANA_WORKSPACE_KEY: ${{ secrets.TEST_ARM_LOG_ANA_WS_KEY }}
  AZ_RG_NAME: ${{ vars.TEST_AZ_RG_NAME }}
  AZ_SUBNET_IDS: ${{ vars.TEST_AZ_SUBNET_IDS }}
  ARM_ENVIRONMENT: china
  ARM_RESOURCE_PROVIDER_REGISTRATIONS: none
  # if using old pr version, please use below configuration to replace ARM_RESOURCE_PROVIDER_REGISTRATIONS
  # ARM_SKIP_PROVIDER_REGISTRATION: true

  # az pr for runner
  ARM_CLIENT_ID_DEST: ${{ secrets.TEST_AZ_ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET_DEST: ${{ secrets.TEST_AZ_ARM_CLIENT_SECRET }}
  ARM_TENANT_ID_DEST: ${{ vars.TEST_AZ_ARM_TENANT_ID }}
  ARM_LOG_ANA_WS_ID_DEST: ${{ secrets.TEST_ARM_LOG_ANA_WS_ID }}
  ARM_LOG_ANA_WS_KEY_DEST: ${{ secrets.TEST_ARM_LOG_ANA_WS_KEY }}
jobs:
  deploy:
    runs-on: serverless-hosted-runner
    steps:      
    - name: Checkout Repo
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #4.17
    - uses: ./ 
      name: "Install Dependency"  
      with:
        op: "install_dependency"
    - uses: ./ 
      name: "Lazy Install"  
      if: inputs.registry == 'Lazy'
      with:
        op: "lazy_install"  
        reg: "test"  
    - uses: ./ 
      name: "Allen Install"  
      if: inputs.registry == 'Allen'
      with:
        op: "allen_install"  
        reg: "allen"
    - uses: ./ 
      name: "Mix Install"  
      if: inputs.registry == 'Mix'
      with:
        op: "mix_install"  
        reg: "test"